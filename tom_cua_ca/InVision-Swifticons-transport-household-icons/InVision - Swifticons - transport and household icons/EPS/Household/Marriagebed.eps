%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.3 (Build 15D21) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 60 60
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 60 60
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.3137255 0.80000001 0.82745099 sc
q
-20 46 m
80 46 l
80 -8 l
-20 -8 l
h
2 21.004173 m
2 22.656301 3.3492875 24 5.0094585 24 c
54.99054 24 l
56.650486 24 58 22.653322 58 21.004173 c
58 13 l
59 14 l
1 14 l
2 13 l
2 21.004173 l
h
0 21.004173 m
0 13 l
0 12.447715 0.44771525 12 1 12 c
59 12 l
59.552284 12 60 12.447715 60 13 c
60 21.004173 l
60 23.758835 57.754112 26 54.99054 26 c
5.0094585 26 l
2.2465725 26 0 23.762735 0 21.004173 c
h
0 21.004173 m
W*
1 21.004173 m
1 23.211008 2.7994254 25 5.0094585 25 c
54.99054 25 l
57.204903 25 59 23.203478 59 21.004173 c
59 13 l
1 13 l
1 21.004173 l
h
1 21.004173 m
W*
0 0 60 60 rc
1 21.004173 m
1 23.211008 2.7994254 25 5.0094585 25 c
54.99054 25 l
57.204903 25 59 23.203478 59 21.004173 c
59 13 l
1 13 l
1 21.004173 l
h
1 21.004173 m
f*
Q
4 w
1 J
1 j
q
1 21.004173 m
1 23.211008 2.7994254 25 5.0094585 25 c
54.99054 25 l
57.204903 25 59 23.203478 59 21.004173 c
59 13 l
1 13 l
1 21.004173 l
h
1 21.004173 m
W*
0 0 60 60 rc
1 0 0 -1 1 25 cm
0 3.9958262 m
0 1.7889924 1.7994254 0 4.0094585 0 c
53.99054 0 l
56.204903 0 58 1.7965212 58 3.9958262 c
58 12 l
0 12 l
0 3.9958262 l
h
0 3.9958262 m
S
Q
3 w
2 J
0.30980393 0.40392157 0.42745098 sc
q
0 0 60 60 rc
1 0 0 -1 3 13 cm
1.5 0 m
1.5 6.5 l
S
1 0 0 -1 54 13 cm
1.5 0 m
1.5 6.5 l
S
Q
0.29019609 0.56078434 0.61960787 sc
q
-18 36 m
78 36 l
78 -11 l
-18 -11 l
h
3 14 m
57 14 l
56 15 l
56 10 l
57 11 l
3 11 l
4 10 l
4 15 l
3 14 l
h
3 16 m
2.4477153 16 2 15.552285 2 15 c
2 10 l
2 9.4477148 2.4477153 9 3 9 c
57 9 l
57.552284 9 58 9.4477148 58 10 c
58 15 l
58 15.552285 57.552284 16 57 16 c
3 16 l
h
3 16 m
W*
3 15 m
57 15 l
57 10 l
3 10 l
3 15 l
h
3 15 m
W*
0 0 60 60 rc
3 15 m
57 15 l
57 10 l
3 10 l
3 15 l
h
3 15 m
f*
Q
4 w
1 J
q
3 15 m
57 15 l
57 10 l
3 10 l
3 15 l
h
3 15 m
W*
0 0 60 60 rc
1 0 0 -1 3 15 cm
0 0 m
54 0 l
54 5 l
0 5 l
0 0 l
h
0 0 m
S
Q
0.3882353 0.70588237 0.4509804 sc
q
-12 69 m
72 69 l
72 2 l
-12 2 l
h
10 36.998257 m
10 42.524639 14.475626 47 20.007566 47 c
39.992435 47 l
45.520073 47 50 42.522831 50 36.998257 c
50 23 l
51 24 l
9 24 l
10 23 l
10 36.998257 l
h
8 36.998257 m
8 23 l
8 22.447716 8.4477148 22 9 22 c
51 22 l
51.552284 22 52 22.447716 52 23 c
52 36.998257 l
52 43.627674 46.624367 49 39.992435 49 c
20.007566 49 l
13.371082 49 8 43.629234 8 36.998257 c
h
8 36.998257 m
W*
9 36.998257 m
9 43.074352 13.920769 48 20.007566 48 c
39.992435 48 l
46.071747 48 51 43.075726 51 36.998257 c
51 23 l
9 23 l
9 36.998257 l
h
9 36.998257 m
W*
0 0 60 60 rc
9 36.998257 m
9 43.074352 13.920769 48 20.007566 48 c
39.992435 48 l
46.071747 48 51 43.075726 51 36.998257 c
51 23 l
9 23 l
9 36.998257 l
h
9 36.998257 m
f*
Q
q
9 36.998257 m
9 43.074352 13.920769 48 20.007566 48 c
39.992435 48 l
46.071747 48 51 43.075726 51 36.998257 c
51 23 l
9 23 l
9 36.998257 l
h
9 36.998257 m
W*
0 0 60 60 rc
1 0 0 -1 9 48 cm
0 11.001744 m
0 4.9256487 4.9207683 0 11.007565 0 c
30.992434 0 l
37.071747 0 42 4.9242735 42 11.001744 c
42 25 l
0 25 l
0 11.001744 l
h
0 11.001744 m
S
Q
0.98431373 0.74117649 0.27843139 sc
q
-5 53 m
52 53 l
52 2 l
-5 2 l
h
16.371391 29.071524 m
16.519741 29.130863 16.794708 29.237057 17.166687 29.374403 c
17.78849 29.603992 18.448732 29.833641 19.117275 30.047575 c
19.666721 30.223398 20.198122 30.38085 20.702106 30.515247 c
21.87496 30.828007 22.842419 31 23.5 31 c
24.157581 31 25.12504 30.828007 26.297894 30.515247 c
26.801878 30.38085 27.333279 30.223398 27.882725 30.047575 c
28.551268 29.833641 29.21151 29.603992 29.833313 29.374403 c
30.205292 29.237057 30.480259 29.130863 30.628609 29.071524 c
30 30 l
30 23 l
31 24 l
16 24 l
17 23 l
17 30 l
16.371391 29.071524 l
h
15.62861 30.928476 m
15.248951 30.776613 15 30.408905 15 30 c
15 23 l
15 22.447716 15.447715 22 16 22 c
31 22 l
31.552284 22 32 22.447716 32 23 c
32 30 l
32 30.408905 31.751049 30.776613 31.371391 30.928476 c
31.207241 30.994137 30.915802 31.106693 30.526062 31.250597 c
29.878334 31.489758 29.19092 31.728859 28.492275 31.952425 c
27.913248 32.137714 27.350901 32.304333 26.813219 32.447716 c
25.486071 32.80162 24.370197 33 23.5 33 c
22.629803 33 21.513929 32.80162 20.186781 32.447716 c
19.649099 32.304333 19.086752 32.137714 18.507725 31.952425 c
17.80908 31.728859 17.121666 31.489758 16.473938 31.250597 c
16.084198 31.106693 15.792759 30.994137 15.62861 30.928476 c
h
15.62861 30.928476 m
W*
16 30 m
16 30 21 32 23.5 32 c
26 32 31 30 31 30 c
31 23 l
16 23 l
16 30 l
h
16 30 m
W*
0 0 60 60 rc
16 30 m
16 30 21 32 23.5 32 c
26 32 31 30 31 30 c
31 23 l
16 23 l
16 30 l
h
16 30 m
f*
Q
q
16 30 m
16 30 21 32 23.5 32 c
26 32 31 30 31 30 c
31 23 l
16 23 l
16 30 l
h
16 30 m
W*
0 0 60 60 rc
1 0 0 -1 16 32 cm
0 2 m
0 2 5 0 7.5 0 c
10 0 15 2 15 2 c
15 9 l
0 9 l
0 2 l
h
0 2 m
S
Q
0.97254902 0.63137257 0.19215687 sc
q
8 53 m
65 53 l
65 2 l
8 2 l
h
29.371391 29.071524 m
29.519741 29.130863 29.794708 29.237057 30.166687 29.374403 c
30.78849 29.603992 31.448732 29.833641 32.117275 30.047575 c
32.666721 30.223398 33.198124 30.38085 33.702106 30.515247 c
34.874962 30.828007 35.842419 31 36.5 31 c
37.157581 31 38.125038 30.828007 39.297894 30.515247 c
39.801876 30.38085 40.333279 30.223398 40.882725 30.047575 c
41.55127 29.833641 42.21151 29.603992 42.833313 29.374403 c
43.205292 29.237057 43.480259 29.130863 43.628609 29.071524 c
43 30 l
43 23 l
44 24 l
29 24 l
30 23 l
30 30 l
29.371391 29.071524 l
h
28.628609 30.928476 m
28.248951 30.776613 28 30.408905 28 30 c
28 23 l
28 22.447716 28.447716 22 29 22 c
44 22 l
44.552284 22 45 22.447716 45 23 c
45 30 l
45 30.408905 44.751049 30.776613 44.371391 30.928476 c
44.207241 30.994137 43.915802 31.106693 43.526062 31.250597 c
42.878334 31.489758 42.190918 31.728859 41.492275 31.952425 c
40.91325 32.137714 40.350899 32.304333 39.813217 32.447716 c
38.486073 32.80162 37.370197 33 36.5 33 c
35.629803 33 34.513927 32.80162 33.186783 32.447716 c
32.649101 32.304333 32.08675 32.137714 31.507725 31.952425 c
30.80908 31.728859 30.121666 31.489758 29.473938 31.250597 c
29.084198 31.106693 28.792759 30.994137 28.628609 30.928476 c
h
28.628609 30.928476 m
W*
29 30 m
29 30 34 32 36.5 32 c
39 32 44 30 44 30 c
44 23 l
29 23 l
29 30 l
h
29 30 m
W*
0 0 60 60 rc
29 30 m
29 30 34 32 36.5 32 c
39 32 44 30 44 30 c
44 23 l
29 23 l
29 30 l
h
29 30 m
f*
Q
q
29 30 m
29 30 34 32 36.5 32 c
39 32 44 30 44 30 c
44 23 l
29 23 l
29 30 l
h
29 30 m
W*
0 0 60 60 rc
1 0 0 -1 29 32 cm
0 2 m
0 2 5 0 7.5 0 c
10 0 15 2 15 2 c
15 9 l
0 9 l
0 2 l
h
0 2 m
S
Q
0.99607843 0.52549022 0.34117648 sc
q
2.1777954 64.988403 m
57.839928 64.988403 l
57.839928 12.77654 l
2.1777954 12.77654 l
h
30.479698 34.65876 m
30.479807 34.658703 l
30.47995 34.658627 30.47995 34.658627 30.479961 34.658619 c
30.479889 34.658657 30.479889 34.658657 30.479609 34.65881 c
30.478746 34.659271 30.478746 34.659271 30.477074 34.660168 c
30.472527 34.662613 30.472527 34.662613 30.464821 34.666775 c
30.444754 34.677643 30.444754 34.677643 30.412689 34.695168 c
30.331194 34.740002 30.284811 34.765781 30.206764 34.809822 c
29.981819 34.936749 29.730356 35.083366 29.459152 35.247448 c
28.684685 35.716011 27.910608 36.228497 27.192118 36.765667 c
25.305725 38.17601 24.177795 39.501919 24.177795 40.345169 c
24.177795 42.348969 24.968267 42.988403 26.903831 42.988403 c
27.833885 42.988403 28.680641 42.534641 29.181934 41.797443 c
29.578773 41.213856 30.43895 41.213856 30.835789 41.797443 c
31.337082 42.534641 32.183838 42.988403 33.113892 42.988403 c
35.049454 42.988403 35.839928 42.348969 35.839928 40.345169 c
35.839928 40.089436 35.727928 39.763985 35.490898 39.381706 c
35.002838 38.594566 34.067905 37.694462 32.825603 36.765667 c
32.107113 36.228497 31.333038 35.716011 30.558571 35.247448 c
30.287365 35.083366 30.035904 34.936749 29.810959 34.809822 c
29.677904 34.734741 29.584679 34.683659 29.538023 34.65876 c
30.479698 34.65876 l
h
29.538023 32.894321 m
29.832273 32.737278 30.18545 32.737278 30.479698 32.894321 c
30.539778 32.926384 30.646683 32.984962 30.793808 33.067982 c
31.035831 33.204544 31.304705 33.361317 31.593861 33.536259 c
32.420425 34.036339 33.247379 34.583832 34.023182 35.163857 c
35.448425 36.229424 36.543011 37.28323 37.19067 38.327774 c
37.608852 39.002209 37.839928 39.673676 37.839928 40.345169 c
37.839928 43.558056 36.071732 44.988403 33.113892 44.988403 c
31.517748 44.988403 30.053455 44.203712 29.181934 42.922062 c
30.835789 42.922062 l
29.964266 44.203712 28.499975 44.988403 26.903831 44.988403 c
23.945992 44.988403 22.177795 43.558056 22.177795 40.345169 c
22.177795 38.630871 23.611515 36.945496 25.994539 35.163857 c
26.770344 34.583832 27.5973 34.036339 28.423862 33.536259 c
28.713018 33.361317 28.981892 33.204544 29.223913 33.067982 c
29.309305 33.019798 29.35965 32.991814 29.451601 32.941227 c
29.488747 32.920921 29.488747 32.920921 29.51371 32.907402 c
29.523829 32.901939 29.523829 32.901939 29.530746 32.89822 c
29.533594 32.89669 29.533594 32.89669 29.535624 32.895603 c
29.536484 32.895142 29.536484 32.895142 29.537136 32.894794 c
29.537434 32.894634 29.537434 32.894634 29.537601 32.894547 c
29.537836 32.894421 l
h
29.538023 32.894321 m
W*
30.008862 33.776539 m
30.008862 33.776539 23.177795 37.422256 23.177795 40.345169 c
23.177795 43.268082 24.845999 43.988403 26.903831 43.988403 c
28.199852 43.988403 29.341328 43.341419 30.008862 42.359753 c
30.676394 43.341419 31.817869 43.988403 33.113892 43.988403 c
35.171722 43.988403 36.839928 43.268082 36.839928 40.345169 c
36.839928 37.422256 30.008862 33.776539 30.008862 33.776539 c
h
30.008862 33.776539 m
W*
0 0 60 60 rc
30.008862 33.776539 m
30.008862 33.776539 23.177795 37.422256 23.177795 40.345169 c
23.177795 43.268082 24.845999 43.988403 26.903831 43.988403 c
28.199852 43.988403 29.341328 43.341419 30.008862 42.359753 c
30.676394 43.341419 31.817869 43.988403 33.113892 43.988403 c
35.171722 43.988403 36.839928 43.268082 36.839928 40.345169 c
36.839928 37.422256 30.008862 33.776539 30.008862 33.776539 c
h
30.008862 33.776539 m
f*
Q
q
30.008862 33.776539 m
30.008862 33.776539 23.177795 37.422256 23.177795 40.345169 c
23.177795 43.268082 24.845999 43.988403 26.903831 43.988403 c
28.199852 43.988403 29.341328 43.341419 30.008862 42.359753 c
30.676394 43.341419 31.817869 43.988403 33.113892 43.988403 c
35.171722 43.988403 36.839928 43.268082 36.839928 40.345169 c
36.839928 37.422256 30.008862 33.776539 30.008862 33.776539 c
h
30.008862 33.776539 m
W*
0 0 60 60 rc
1 0 0 -1 23.177795 43.988403 cm
6.8310657 10.211864 m
6.8310657 10.211864 0 6.5661469 0 3.643235 c
0 0.72032315 1.6682031 0 3.7260358 0 c
5.0220571 0 6.1635332 0.6469835 6.8310657 1.6286504 c
7.4985986 0.6469835 8.6400747 0 9.9360952 0 c
11.993928 0 13.662131 0.72032315 13.662131 3.643235 c
13.662131 6.5661469 6.8310657 10.211864 6.8310657 10.211864 c
h
6.8310657 10.211864 m
S
ep
end
